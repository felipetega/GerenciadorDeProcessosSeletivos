aula1 - 2:01
aula2 - 1:15:48

33:53

-VENV
%HOMEPATH%\.virtualenvs\gerenciadorDeProcessosSeletivos\Scripts\activate.bat

-INSTALL DEPENDENCIES
pip install django
pip install pillow
python.exe -m pip install -U autopep8

-START PROJECT
django-admin startproject seletive .

-RUN SERVER
python manage.py runserver

-CREATE APP EMPRESA
1.python manage.py startapp empresa

2.settings.py
INSTALLED-APPS = ['empresa']

3.urls.py
from django.urls import include
urlpatterns = [
  path('home/',include('empresa.urls'))
  ]

4.Criar urls.py em empresa
from django import path
from . import views
urlpatterns = [
  path('nova_empresa/', views.nova_empresa, name="nova_empresa")
  ]

5.views.py
from django.http import HttpResponse
def nova_empresa(request):
  return HttpResponse('AAAAAAA')

/home/nova_empresa

-TEMPLATES
1.settings.py
import os
'DIRS' = [os.path.join(BASE_DIR, 'templates')]

2.mkdir templates raiz base.html

3.mkdir templates empresa nova_empresa

4.views.py
def nova_empresa(request):
  return render(request, 'nova_empresa.html')

5.nova_empresa.html
{% extends "base.html" %}

{% block 'body' %}

  AAAAAAA

{% endblock %}

-STATIC FILES (MEDIA,CSS,IMG,JS)
1.settings.py
STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'templates/static'),)
STATIC_ROOT = os.path.join('static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

2.mkdir
raiz = templates = static = base = css,img,js = base.css
raiz = templates = static = empresa = css,img,js = nova_empresa.css

3.base.html
<link href="{% static 'base/css/base.css' %}" rel="stylesheet">

4.nova_empresa.html
{% extends "base.html" %}
{% load static %}

{% block 'head' %}

    <link href="{% static 'empresa/css/nova_empresa.css' %}" rel="stylesheet">

{% endblock  %}

-DATABASE
1.models.py
Criar tabela(class) e colunas(var)
class class1(models.Model):
  tecnologia = models.CharField(max_length=50)
  def __str__(self):
    return self.tecnologia

2.python manage.py makemigrations

3.python manage.py migrate

4.admin.py
from .models import class1, class2
admin.site.register(class1)

5.python manage.py createsuperuser
Cria admin

-Interação database - html
1.views.py
from . models import class1
def nova_empresa(request):
  techs=class1.objects.all() //.filter()
  return render(request, 'nova_empresa.html',{'techs':techs})

3.nova_empresa.html
for tech in techs
  <option value="{{tech.id}}">{{tech}}</option>
endfor

<form action="{% url 'nova_empresa' %}" method="POST" enctype="multipart/form-data">{% csrf_token %}

4.views.py
if request.method == "GET":
elif request.method == "POST":
  input = request.POST.get('inputName')
  tecnologias = request.POST.getlist('tecnologias')
  logo = request.FILES.get('logo')

if (len(nome.strip()) == 0):
  messages.add_message(request, constants.ERROR, 'Preencha todos os campos')
  return redirect('/home/nova_empresa')

if logo.size > 100_000_000:
   messages.add_mes(request, constants ERR'A logo da empresa deve menos de 10MB')
   return redirect('/hnova_empresa')

empresa = Empresa(
  logo=logo,
  input=input
)
empresa.save()
empresa.tecnologias(*tecnologias)
empresa.save()
messages.add_message(requeconstants.SUCCESS, 'Emprcadastrada com sucesso')
return redirect('/nova_empresa')

-MESSAGES/BOOTSTRAP
1.settings.py
MESSAGE_TAGS ={
    constants.DEBUG: 'alert-primary',
    constants.ERROR: 'alert-danger',
    constants.SUCCESS: 'alert-success',
    constants.INFO: 'alert-info',
    constants.WARNING: 'alert-warning',
}

2.views.py
from django.contrib import messages
from django.contrib.messages import constants

3.nova_empresa.html
if messages
  for message in messages
    <section class="alert {{message.tags}}">{{message}}<section>